# .github/workflows/update-readme-issues.yml
name: Update README with Current Issues

on:
  # Run on every push to any branch
  push:
    branches: ['*']  # Trigger on all branches
  
  # Run when issues are created, updated, or closed
  issues:
    types: [opened, closed, reopened, edited, labeled, unlabeled]
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  update-readme:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    permissions:
      contents: write      # Need to update README.md
      issues: read        # Need to read issues
      pull-requests: write # Need to create PR if auto-commit fails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Docker for MCP Server
        run: |
          echo "🐳 Setting up Docker for GitHub MCP Server..."
          docker --version
          docker pull ghcr.io/github/github-mcp-server:latest

      - name: Create package.json
        run: |
          cat > package.json << 'EOF'
          {
            "name": "readme-issues-updater",
            "version": "1.0.0",
            "type": "module",
            "dependencies": {
              "@modelcontextprotocol/sdk": "^0.5.0"
            },
            "engines": {
              "node": ">=18.0.0"
            }
          }
          EOF

      - name: Install dependencies
        run: npm install

      - name: Backup current README
        run: |
          if [ -f README.md ]; then
            cp README.md README.md.backup
            echo "✅ README.md backed up"
          else
            echo "ℹ️ No existing README.md found"
          fi

      - name: Update README with current issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "🚀 Starting README issues update..."
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Trigger: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          
          # Create scripts directory if it doesn't exist
          mkdir -p .github/scripts
          
          # Run the README update script
          node .github/scripts/update-readme-with-issues.js

      - name: Check for changes
        id: git-check
        run: |
          if git diff --quiet README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes detected in README.md"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected in README.md"
            echo "Changes:"
            git --no-pager diff README.md | head -50
          fi

      - name: Commit and push changes
        if: steps.git-check.outputs.changed == 'true' || github.event.inputs.force_update == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the updated README
          git add README.md
          
          # Create commit message with issue summary
          OPEN_ISSUES=$(grep -o "🔓 Open Issues ([0-9]*)" README.md | grep -o "[0-9]*" || echo "0")
          TOTAL_ISSUES=$(grep -o "Total Issues | [0-9]*" README.md | grep -o "[0-9]*" || echo "0")
          
          git commit -m "📋 Update README with current issues
          
          - Total issues: ${TOTAL_ISSUES}
          - Open issues: ${OPEN_ISSUES}
          - Updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          - Trigger: ${{ github.event_name }}
          - Branch: ${{ github.ref_name }}
          - Commit: ${{ github.sha }}
          
          [skip ci]"
          
          # Push changes
          git push origin ${{ github.ref_name }}
          
          echo "✅ README.md updated and pushed successfully"

      - name: Create summary
        if: always()
        run: |
          echo "## 📋 README Issues Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** \`${{ github.repository }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.git-check.outputs.changed }}" == "true" ]; then
            echo "✅ **Status:** README.md was updated with current issues" >> $GITHUB_STEP_SUMMARY
            
            # Extract issue counts from README
            if [ -f README.md ]; then
              TOTAL=$(grep -o "Total Issues | [0-9]*" README.md | grep -o "[0-9]*" || echo "0")
              OPEN=$(grep -o "🔓 Open Issues ([0-9]*)" README.md | grep -o "[0-9]*" || echo "0")
              CLOSED=$(grep -o "[0-9]* closed" README.md | grep -o "^[0-9]*" || echo "0")
              
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Issue Statistics:**" >> $GITHUB_STEP_SUMMARY
              echo "- Total Issues: ${TOTAL}" >> $GITHUB_STEP_SUMMARY
              echo "- Open Issues: ${OPEN}" >> $GITHUB_STEP_SUMMARY
              echo "- Closed Issues: ${CLOSED}" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **Status:** No changes detected - README.md is up to date" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Powered by [GitHub MCP Server](https://github.com/github/github-mcp-server)*" >> $GITHUB_STEP_SUMMARY

      - name: Cleanup Docker
        if: always()
        run: |
          echo "🧹 Cleaning up Docker containers..."
          docker container prune -f || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: readme-update-${{ github.run_number }}
          path: |
            README.md
            README.md.backup
          retention-days: 7